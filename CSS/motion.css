
html {
    box-sizing: border-box;
    font-family: "Roboto";
    font-size: 16px;
    scroll-behavior: smooth;
    color: white;
    background-color: hsl(0, 1%, 22%);

    --opacity-p: 0;
}

*,
*::after,
*::before{
    box-sizing: inherit;
    color: inherit;
}

a{
    text-decoration: none;
}

.links-items a:hover, .items a:hover{
    opacity: .5;
}


ul{
    margin: 0;
}

li{
    list-style-type: none;
}

.header{
    position: sticky;
    top: 0; 
    background-color: rgb(93, 93, 93);
    display: flex;
    width: 100%;
    height: calc(3.25rem + 2vh);
    z-index: 2000;
    flex-flow: row nowrap;
}

.hud-container{
    display: flex;
    flex-flow: inherit;
    width: 20%;
   

}

.hud{
    margin-left: 2rem;
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 30px;
}


.items{
    display: inline-block;
}

.items span{
    font-size: calc(1.5rem + .5vw);
}

.links-container{
    margin-left: 2rem;
    width: 45%;
    display: flex;

}
.links{
    display: flex;
    display: flex;
    align-items: center;
    gap: 3rem
}

.links-items{
    padding: 1rem;
    display: inline-block;
}

h1{
    text-align: center;
    background-image: linear-gradient(90deg, rgba(95,214,202,1) 27%, rgba(94,75,255,1) 72%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
}

.box{
    width: 400px;
    height: 400px;
    border: thick solid hsl(0,0%,0%);
    margin: 0 auto;
    margin-bottom: 5rem;
}

.card{
    width: 400px;
    height: 400px;
    border: thick solid hsl(0,0%,0%);
    margin: 0 auto;
    margin-bottom: 5rem;
}

.card img{
    object-fit: cover;
    position: center center;
    width: 100%;
    height: 100%;
    object-position: 0 50%;
    
}

/* Transiciones
transition-property
transition-duration: segundos o milisegundos
transition-timing-function: linear ease ease-in ease-out ease-in-out steps none
transition-delay: segundos o milisegundos

transition: property duration timing-function delay

*/

.transitions .box{
    background-color: magenta;
    transition-property: background-color;
    transition-duration: 500ms;
    transition-timing-function: ease ;
    transition-delay: .5ms;

    transition: border-color .5s linear;
    transition: background-color 1s linear,
    border-color 1s steps(120),
    border-radius 1s ease-in-out;

    /* Propiedades animables: https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_animated_properties */

}

.transitions .box:hover{
    background-color: cyan;
    border-color: hsl(0, 77%, 29%);
    border-radius: 1rem;

}


.transitions .card{
    transition: all 500ms ease-in-out .5ms;
    transition: opacity 700ms ease-out,
    border-color 1s steps(120),
    filter 1.5s ease-in-out;
}

.transitions .card:hover{
    opacity: .75;
    border-color: orchid;
    filter: blur() drop-shadow(1rem 1rem 1rem hsl(0,0%,0%));
    
}

.transitions .card img{
    transition: object-position 1s ease-in-out;
}

.transitions .card img:hover{
    object-position: 50% 50%;
}

.card-2{
    display: flex;
    align-items: center;
    justify-content: center;
    width: 1000px;
    height: 800px;
    margin: 0 auto;
}

.tarjeta-container{
    display: flex;
    
    width: 90%;
    height: 80%;
    justify-content: space-evenly;
    align-items: center;

}

.tarjeta-container div{ 
    width: 200px;
    height: 150px;
    background-color: hsl(0, 2%, 42%);
    border-radius: .5rem;
    transition: width 500ms ease-in-out,
    height 500ms ease-in-out;
}

.tarjeta-container div h3 {
    text-align: center;
}

.icons{
    display: block;
    font-size: 2rem;
    color: hsl(54, 100%, 51%);
    text-align: center;
}

.tarjeta-container div p {
    display: inline-block;
    margin: 10px 20px;
    text-align: center;
    opacity: var(--opacity-p);
}


.tarjeta-container div:hover p {
    opacity: 1;
    transition: opacity 1.5s cubic-bezier(1,.05,.83,.90);
}

.tarjeta-container div:not(:hover) p {
    opacity: 0;
    transition: opacity 200ms cubic-bezier(0,1.27,.35,.85);
}


.tarjeta-container div:hover{
    --opacity-p: 1;
    width: 250px;
    height: 220px;
}


.transform-2d img{
    transition: transform 500ms ease-in;
 
}

.transform-2d img:hover{ 
    transform: none;    /*none translateX() translateY() translateZ() translate() scaleX() scaleY() scaleZ() scale()*/
    transform: translateX(5rem);
    transform: translateY(-4rem);
    transform: translate(4rem, -5rem);
    transform: translate(50%, -50%);
    transform: scaleX(2);
    transform: scaleY(.2);
    transform: scaleZ(.2);
    transform: scale(2,2);
    transform: scaleY(-2);
    transform: scale(-1,-1);
    transform: rotateX(60deg);
    transform: rotateX(90deg);
    transform: rotateY(60deg);
    transform: rotateY(90deg);
    transform: rotateZ(20deg);
    transform: rotate(60deg); /* Es como rotateZ */
    transform: skewX(90deg);
    transform: skewY(20deg);
    transform: skew(-20deg,-20deg);

    /* Recibe 6 valores = (scaleX(), skewY(), skewX(), scaleY(), translateX(), translateY())*/
    transform: matrix(2,-2,2, 2, 3, 3);

    
}

.transform-2d-multiple img{
    transition: transform 1s ease-in-out;
}


.transform-2d-multiple img:hover{
    /* Transformaciones multiples */
    transform: translate(5rem, 4rem) scale(-1,1) rotate(128deg) skew(25deg);

}

.transform-3d{
    perspective: 10rem;
}

.transform-3d img{
    object-position: 55% 0;
    transition: transform 2s ease-in-out;

}



.transform-3d img:hover{
    transform: perspective(10rem) translateZ(4rem);
    transform: translateZ(-4rem);
    
    transform: translate3d(20rem, 4rem, 3rem) /* translate3d(x,y,z) */;
    transform: scale3d(2,.5,3);
    transform: rotateX(60deg);
    transform: rotateY(60deg);
    transform: rotateY(90deg);
    transform: rotate3d(1,1,-1,45deg); 
    transform: matrix3d(
        -0.6,       1.34788, 0,        0,
        -2.34788,  -0.6,     0,        0,
        0,         0,       1,        0,
        0,         0,      10,        1
        );

    transform: translate3d(3rem, 4rem, 1rem) rotate3d(1,1,-1, 360deg) scale3d(2,-1, 2)

}

.transform-origin img{
    transition: transform 2s ease-in-out;
    transform-origin: 0% 0% 0;     /* VALOR POR DEFECTO 50% 50% 0 */
    transform-origin: 0;
    transform-origin: top right;

}


.transform-origin img:hover{
    transform: rotate(360deg);

}

.flip-card-1,.flip-card-2{
    perspective: 10rem;
    margin: 0 auto;
    border: thin solid black;
    height: 500px;
    width: 20%;
    position: relative;
    cursor: pointer;
    transition: transform 1s ease-in-out;
    transform-style: preserve-3d;
    
}

.flip-face{
    position: absolute;
    width: 100%;
    height: inherit;
    backface-visibility: hidden;
}

.flip-front{
    
    display: flex;
    flex-flow: column;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: inherit;
    background-color: hsl(307, 78%, 40%);
    
}

.flip-back{
    display: flex;
    flex-flow: column;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: inherit;

    color: hsl(212, 99%, 39%);
    background-image: url("../IMG/gatoGordo.jpeg");    
    background-size: cover;
    background-position: 50% 0;
}


.flip-front{
    transform: rotateY(0deg) ;
}
.flip-back{
    transform: rotateY(180deg) ;
}

.flip-card-1:hover{
    transform: rotateY(180deg);
}

.flip-front h3{
    margin: 0;
}

.flip-card-2{
    transform-origin: right center;
}

.flip-card-2:hover{
    transform: translateX(-100%) rotateY(-180deg);
}

@keyframes myAwesomeAnimation {
    from{
        opacity: 0;
        transform: translateX(0);
    }

    to{
        opacity: 1;
        transform: translateX(100%);;
    }
}

.animation{
    /* name duration timing-function delay iteration-count direction fill-mode play-state */
    animation-name: myAwesomeAnimation ; 
    animation-duration: 1s;
    animation-timing-function: cubic-bezier(1,0,0,1);
    animation-timing-function: ease-in-out;
    animation-delay: 0s ;

    animation-iteration-count: 1;
    animation-iteration-count: 3;
    animation-iteration-count: infinite;
    animation-iteration-count: infinite;

    animation-direction: normal;
    animation-direction: reverse;
    animation-direction: alternate;
    animation-direction: alternate-reverse;
    animation-direction: alternate;

    animation-fill-mode: none;
    /* Al final de la animación se queda con los estilos finales de la animación */
    animation-fill-mode: forwards;
    animation-fill-mode: backwards;
    animation-fill-mode: both;

    animation-play-state: running;
    animation-play-state: paused;

    animation: myAwesomeAnimation 1s ease 0s 7 alternate both running;

}

@keyframes animation2 {
    0%{
        opacity: 0;
        transform: rotate(0deg) 

    }

    25%{
        transform: rotate(90deg) ;
    }

    50%{
        opacity: 1;
    
        transform: rotate(180deg) 
    }

    60%{
        opacity: 0;
        transform: rotate(360deg) 
    }

    100%{
        opacity: 1;
        transform: translateX(100%);;
    }
}

@keyframes animation3 {
    0%{
        transform: translateY(4rem);
    }   
     10%{
        transform: translateY(-4rem);
    }   
     20%{
        transform: translateY(4rem);
    }    
    30%{
        transform: translateY(-4rem);
    }    
    40%{
        transform: translateY(4rem);
    }    
    50%{
        transform: translateY(-4rem);
    }    
    60%{
        transform: translateY(4rem);
    }    
    70%{
        transform: translateY(-4rem);
    }    
    80%{
        transform: translateY(4rem);
    }    
    90%{
        transform: translateY(-4rem);
    }
    100%{
        transform: translateY(4rem);
    }
    
}

.animation-2{
    transform-origin: center center;
    animation: animation2 2s linear 0s 7 alternate both;
}


.animation-3{
    animation: animation2 2s ease-in-out 0s infinite alternate both, animation3 2s linear 0s 3 alternate both;
}