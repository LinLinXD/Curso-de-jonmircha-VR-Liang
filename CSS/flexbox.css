

*,
*::after,
*::before{
    box-sizing: border-box;
}

.container{
    background-color: hsl(0,0%,20%);
    height: 30vh;



    display: flex;
    flex-direction: column; /* row row-reverse column column-reverse */ 
    flex-wrap: wrap-reverse; /* nowrap wrap wrap-reverse */
    flex-flow: row nowrap; /* Shorthand para flex-wrap y flex-direction*/
    justify-content: flex-start;  /* flex-start | center | flex-end | space-between | space-around | space-evenly  Define la alineación de los elementos hijos, respecto del eje principal*/
    align-items:stretch; /* stretch | flex-start | flex-end | center | baseline */
    align-content: flex-start;
}


.items{
    background-color: hsl(0,0%,40%);
    /* width: 10%;
    height: 20%; */
    border: medium solid hsl(0,0%,0%);
    flex-grow: 0;
    /* Cuando la caja flexbox tenga espacio sobrante, es la habilidad o el factor de crecer, valor por defecto es 0, NO se aceptan valores negativos */
    flex-shrink: 1;
    /* Cuando la caja flexbox NO tenga espacio sobrante, es la habilidad o el factor de encogerse, valor por defecto es 1, NO se aceptan valores negativos  */
    flex-basis: auto;
     /* Es el tamaño del elemento hijo dentro de la línea de la caja flexbox
    Si la caja flexbox tiene dirección de fila, flex-basis representa el width
    Si la caja flexbox tiene dirección de columna, flex-basis representa el height
    Valor por defecto auto *  */
}
    /* 
    1. 50
    2. 
    3. 50
    
    */



.items:nth-child(2){
    /* flex-grow: 2; */
    /* flex-shrink: 2; */
    order: 0;
}
 

/* .items:nth-child(odd){
    font-size: 1.5rem ;
} */